{"ast":null,"code":"var _jsxFileName = \"/home/levi/Development/code/phase-5/book-club/client/src/components/ManageClub.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport axios from './axiosConfig';\nimport { AuthContext } from './context/AuthContext';\nimport { BookClubsContext } from './context/BookClubsContext';\nimport { BooksContext } from './context/BooksContext';\nimport { GenresContext } from './context/GenresContext';\nimport { ThemeContext } from './context/ThemeContext';\nimport { useHistory } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport './css/ManageClub.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageClub = () => {\n  _s();\n  const {\n    user,\n    updateUserCreatedClubs\n  } = useContext(AuthContext);\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const {\n    updateBookClub\n  } = useContext(BookClubsContext);\n  const {\n    books\n  } = useContext(BooksContext);\n  const {\n    genres\n  } = useContext(GenresContext);\n  const [clubDetails, setClubDetails] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const [selectedBookId, setSelectedBookId] = useState('');\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    const fetchClubDetails = async () => {\n      try {\n        const response = await axios.get(`/manage-club/${user.created_clubs[0]}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setClubDetails(response.data);\n        setMembers(response.data.members);\n        setSelectedGenres(response.data.genres.map(genre => genre.id));\n      } catch (error) {\n        console.error('Error fetching club details:', error);\n        setError('Error fetching club details.');\n      }\n    };\n    if (user && user.created_clubs && user.created_clubs.length > 0) {\n      fetchClubDetails();\n    }\n  }, [user]);\n  const filterBooksByGenres = useCallback(() => {\n    if (selectedGenres.length > 0) {\n      const filtered = books.filter(book => selectedGenres.includes(book.genre.id));\n      setFilteredBooks(filtered);\n    } else {\n      setFilteredBooks([]);\n    }\n  }, [selectedGenres, books]);\n  useEffect(() => {\n    filterBooksByGenres();\n  }, [selectedGenres, books, filterBooksByGenres]);\n  const handleUpdateCurrentReading = async () => {\n    try {\n      const response = await axios.patch(`/manage-club/${user.created_clubs[0]}`, {\n        action: 'update_current_reading',\n        book_id: selectedBookId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setMessage(response.data.message);\n      const updatedClub = {\n        ...clubDetails,\n        current_book: books.find(book => book.id === selectedBookId)\n      };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n    } catch (error) {\n      setError('Error updating current reading.');\n    }\n  };\n  const handleRemoveMember = async memberId => {\n    try {\n      const response = await axios.patch(`/manage-club/${user.created_clubs[0]}`, {\n        action: 'remove_member',\n        member_id: memberId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setMessage(response.data.message);\n      const updatedMembers = members.filter(member => member.id !== memberId);\n      setMembers(updatedMembers);\n      const updatedClub = {\n        ...clubDetails,\n        members: updatedMembers\n      };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n    } catch (error) {\n      setError('Error removing member.');\n    }\n  };\n  const handleUpdateGenres = async () => {\n    if (selectedGenres.length === 0) {\n      setError('You must select at least one genre.');\n      return;\n    }\n    try {\n      const response = await axios.patch(`/manage-club/${user.created_clubs[0]}`, {\n        action: 'update_genres',\n        genre_ids: selectedGenres\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setMessage(response.data.message);\n      const updatedGenres = genres.filter(genre => selectedGenres.includes(genre.id));\n      const updatedClub = {\n        ...clubDetails,\n        genres: updatedGenres\n      };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n      filterBooksByGenres();\n    } catch (error) {\n      setError('Error updating genres.');\n    }\n  };\n  const handleGenreChange = genreId => {\n    if (selectedGenres.includes(genreId)) {\n      setSelectedGenres(selectedGenres.filter(id => id !== genreId));\n    } else if (selectedGenres.length < 3) {\n      setSelectedGenres([...selectedGenres, genreId]);\n    }\n  };\n  const handleDeleteClub = async () => {\n    try {\n      const response = await axios.delete(`/manage-club/${user.created_clubs[0]}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setMessage(response.data.message);\n      updateUserCreatedClubs(user.created_clubs.filter(clubId => clubId !== clubDetails.id));\n      updateBookClub({\n        ...clubDetails,\n        deleted: true\n      });\n      history.push('/book-clubs');\n    } catch (error) {\n      setError('Error deleting book club.');\n    }\n  };\n  if (!clubDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `manage-club-page ${theme}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manage-club-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Manage My Club: \", clubDetails ? clubDetails.name : 'Loading...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Update Genres (select up to 3)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `genre-${genre.id}`,\n              value: genre.id,\n              checked: selectedGenres.includes(genre.id),\n              onChange: () => handleGenreChange(genre.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `genre-${genre.id}`,\n              children: genre.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, genre.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdateGenres,\n            children: \"Update Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manage-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Update Current Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"book-selection\",\n            children: filteredBooks.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `book-${book.id}`,\n                name: \"selectedBook\",\n                value: book.id,\n                checked: selectedBookId === book.id,\n                onChange: () => setSelectedBookId(book.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `book-${book.id}`,\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)]\n            }, book.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdateCurrentReading,\n            children: \"Update Current Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manage-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Remove Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: members.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [member.username, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRemoveMember(member.id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)]\n            }, member.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteClub,\n      className: \"delete-button\",\n      children: \"Delete Club\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageClub, \"xsnR1JsSswzu6lHub0AM9W6B3OA=\", false, function () {\n  return [useHistory];\n});\n_c = ManageClub;\nexport default ManageClub;\nvar _c;\n$RefreshReg$(_c, \"ManageClub\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useCallback","axios","AuthContext","BookClubsContext","BooksContext","GenresContext","ThemeContext","useHistory","NavBar","jsxDEV","_jsxDEV","ManageClub","_s","user","updateUserCreatedClubs","theme","updateBookClub","books","genres","clubDetails","setClubDetails","members","setMembers","filteredBooks","setFilteredBooks","selectedBookId","setSelectedBookId","selectedGenres","setSelectedGenres","message","setMessage","error","setError","history","fetchClubDetails","response","get","created_clubs","headers","Authorization","localStorage","getItem","data","map","genre","id","console","length","filterBooksByGenres","filtered","filter","book","includes","handleUpdateCurrentReading","patch","action","book_id","updatedClub","current_book","find","handleRemoveMember","memberId","member_id","updatedMembers","member","handleUpdateGenres","genre_ids","updatedGenres","handleGenreChange","genreId","handleDeleteClub","delete","clubId","deleted","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","type","value","checked","onChange","htmlFor","onClick","title","username","_c","$RefreshReg$"],"sources":["/home/levi/Development/code/phase-5/book-club/client/src/components/ManageClub.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport axios from './axiosConfig';\nimport { AuthContext } from './context/AuthContext';\nimport { BookClubsContext } from './context/BookClubsContext';\nimport { BooksContext } from './context/BooksContext';\nimport { GenresContext } from './context/GenresContext';\nimport { ThemeContext } from './context/ThemeContext'; \nimport { useHistory } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport './css/ManageClub.css';\n\nconst ManageClub = () => {\n  const { user, updateUserCreatedClubs } = useContext(AuthContext);\n  const { theme } = useContext(ThemeContext);\n  const { updateBookClub } = useContext(BookClubsContext);\n  const { books } = useContext(BooksContext);\n  const { genres } = useContext(GenresContext);\n  const [clubDetails, setClubDetails] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const [selectedBookId, setSelectedBookId] = useState('');\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchClubDetails = async () => {\n      try {\n        const response = await axios.get(`/manage-club/${user.created_clubs[0]}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        setClubDetails(response.data);\n        setMembers(response.data.members);\n        setSelectedGenres(response.data.genres.map((genre) => genre.id));\n      } catch (error) {\n        console.error('Error fetching club details:', error);\n        setError('Error fetching club details.');\n      }\n    };\n\n    if (user && user.created_clubs && user.created_clubs.length > 0) {\n      fetchClubDetails();\n    }\n  }, [user]);\n\n  const filterBooksByGenres = useCallback(() => {\n    if (selectedGenres.length > 0) {\n      const filtered = books.filter((book) =>\n        selectedGenres.includes(book.genre.id)\n      );\n      setFilteredBooks(filtered);\n    } else {\n      setFilteredBooks([]);\n    }\n  }, [selectedGenres, books]);\n\n  useEffect(() => {\n    filterBooksByGenres();\n  }, [selectedGenres, books, filterBooksByGenres]);\n\n  const handleUpdateCurrentReading = async () => {\n    try {\n      const response = await axios.patch(`/manage-club/${user.created_clubs[0]}`, {\n        action: 'update_current_reading',\n        book_id: selectedBookId,\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setMessage(response.data.message);\n      const updatedClub = { ...clubDetails, current_book: books.find((book) => book.id === selectedBookId) };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n    } catch (error) {\n      setError('Error updating current reading.');\n    }\n  };\n\n  const handleRemoveMember = async (memberId) => {\n    try {\n      const response = await axios.patch(`/manage-club/${user.created_clubs[0]}`, {\n        action: 'remove_member',\n        member_id: memberId,\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setMessage(response.data.message);\n      const updatedMembers = members.filter((member) => member.id !== memberId);\n      setMembers(updatedMembers);\n      const updatedClub = { ...clubDetails, members: updatedMembers };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n    } catch (error) {\n      setError('Error removing member.');\n    }\n  };\n\n  const handleUpdateGenres = async () => {\n    if (selectedGenres.length === 0) {\n      setError('You must select at least one genre.');\n      return;\n    }\n    try {\n      const response = await axios.patch(`/manage-club/${user.created_clubs[0]}`, {\n        action: 'update_genres',\n        genre_ids: selectedGenres,\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setMessage(response.data.message);\n      const updatedGenres = genres.filter((genre) => selectedGenres.includes(genre.id));\n      const updatedClub = { ...clubDetails, genres: updatedGenres };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n      filterBooksByGenres();\n    } catch (error) {\n      setError('Error updating genres.');\n    }\n  };\n\n  const handleGenreChange = (genreId) => {\n    if (selectedGenres.includes(genreId)) {\n      setSelectedGenres(selectedGenres.filter(id => id !== genreId));\n    } else if (selectedGenres.length < 3) {\n      setSelectedGenres([...selectedGenres, genreId]);\n    }\n  };\n\n  const handleDeleteClub = async () => {\n    try {\n      const response = await axios.delete(`/manage-club/${user.created_clubs[0]}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setMessage(response.data.message);\n      updateUserCreatedClubs(user.created_clubs.filter((clubId) => clubId !== clubDetails.id));\n      updateBookClub({ ...clubDetails, deleted: true });\n      history.push('/book-clubs');\n    } catch (error) {\n      setError('Error deleting book club.');\n    }\n  };\n\n  if (!clubDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <NavBar />\n      <div className={`manage-club-page ${theme}`}>\n        <div className=\"left-column\">\n          <div className=\"manage-club-container\">\n            <h2>Manage My Club: {clubDetails ? clubDetails.name : 'Loading...'}</h2>\n          </div>\n          <div className=\"genre-list\">\n            <h3>Update Genres (select up to 3)</h3>\n            {genres.map((genre) => (\n              <div key={genre.id} className=\"genre-item\">\n                <input\n                  type=\"checkbox\"\n                  id={`genre-${genre.id}`}\n                  value={genre.id}\n                  checked={selectedGenres.includes(genre.id)}\n                  onChange={() => handleGenreChange(genre.id)}\n                />\n                <label htmlFor={`genre-${genre.id}`}>{genre.name}</label>\n              </div>\n            ))}\n            <button onClick={handleUpdateGenres}>Update Genres</button>\n          </div>\n        </div>\n        <div className=\"center-column\">\n          <div className=\"manage-section\">\n            <h3>Update Current Reading</h3>\n            <div className=\"book-selection\">\n              {filteredBooks.map((book) => (\n                <div key={book.id} className=\"book-item\">\n                  <input\n                    type=\"radio\"\n                    id={`book-${book.id}`}\n                    name=\"selectedBook\"\n                    value={book.id}\n                    checked={selectedBookId === book.id}\n                    onChange={() => setSelectedBookId(book.id)}\n                  />\n                  <label htmlFor={`book-${book.id}`}>{book.title}</label>\n                </div>\n              ))}\n            </div>\n            <button onClick={handleUpdateCurrentReading}>Update Current Reading</button>\n          </div>\n        </div>\n        <div className=\"right-column\">\n          <div className=\"manage-section\">\n            <h3>Remove Members</h3>\n            <ul>\n              {members.map((member) => (\n                <li key={member.id}>\n                  {member.username}\n                  <button onClick={() => handleRemoveMember(member.id)}>Remove</button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n      <button onClick={handleDeleteClub} className=\"delete-button\">Delete Club</button>\n      {message && <p className=\"success-message\">{message}</p>}\n      {error && <p className=\"error-message\">{error}</p>}\n    </div>\n  );\n};\n\nexport default ManageClub;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAC3E,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,IAAI;IAAEC;EAAuB,CAAC,GAAGf,UAAU,CAACG,WAAW,CAAC;EAChE,MAAM;IAAEa;EAAM,CAAC,GAAGhB,UAAU,CAACO,YAAY,CAAC;EAC1C,MAAM;IAAEU;EAAe,CAAC,GAAGjB,UAAU,CAACI,gBAAgB,CAAC;EACvD,MAAM;IAAEc;EAAM,CAAC,GAAGlB,UAAU,CAACK,YAAY,CAAC;EAC1C,MAAM;IAAEc;EAAO,CAAC,GAAGnB,UAAU,CAACM,aAAa,CAAC;EAC5C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC4B,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMoC,OAAO,GAAG1B,UAAU,CAAC,CAAC;EAE5BT,SAAS,CAAC,MAAM;IACd,MAAMoC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAG,CAAC,gBAAgBvB,IAAI,CAACwB,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE;UACxEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACxD;QACF,CAAC,CAAC;QACFrB,cAAc,CAACe,QAAQ,CAACO,IAAI,CAAC;QAC7BpB,UAAU,CAACa,QAAQ,CAACO,IAAI,CAACrB,OAAO,CAAC;QACjCO,iBAAiB,CAACO,QAAQ,CAACO,IAAI,CAACxB,MAAM,CAACyB,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,CAAC,CAAC;MAClE,CAAC,CAAC,OAAOd,KAAK,EAAE;QACde,OAAO,CAACf,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDC,QAAQ,CAAC,8BAA8B,CAAC;MAC1C;IACF,CAAC;IAED,IAAInB,IAAI,IAAIA,IAAI,CAACwB,aAAa,IAAIxB,IAAI,CAACwB,aAAa,CAACU,MAAM,GAAG,CAAC,EAAE;MAC/Db,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACrB,IAAI,CAAC,CAAC;EAEV,MAAMmC,mBAAmB,GAAGhD,WAAW,CAAC,MAAM;IAC5C,IAAI2B,cAAc,CAACoB,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAME,QAAQ,GAAGhC,KAAK,CAACiC,MAAM,CAAEC,IAAI,IACjCxB,cAAc,CAACyB,QAAQ,CAACD,IAAI,CAACP,KAAK,CAACC,EAAE,CACvC,CAAC;MACDrB,gBAAgB,CAACyB,QAAQ,CAAC;IAC5B,CAAC,MAAM;MACLzB,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC,EAAE,CAACG,cAAc,EAAEV,KAAK,CAAC,CAAC;EAE3BnB,SAAS,CAAC,MAAM;IACdkD,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACrB,cAAc,EAAEV,KAAK,EAAE+B,mBAAmB,CAAC,CAAC;EAEhD,MAAMK,0BAA0B,GAAG,MAAAA,CAAA,KAAY;IAC7C,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMlC,KAAK,CAACqD,KAAK,CAAC,gBAAgBzC,IAAI,CAACwB,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE;QAC1EkB,MAAM,EAAE,wBAAwB;QAChCC,OAAO,EAAE/B;MACX,CAAC,EAAE;QACDa,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MACFX,UAAU,CAACK,QAAQ,CAACO,IAAI,CAACb,OAAO,CAAC;MACjC,MAAM4B,WAAW,GAAG;QAAE,GAAGtC,WAAW;QAAEuC,YAAY,EAAEzC,KAAK,CAAC0C,IAAI,CAAER,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKpB,cAAc;MAAE,CAAC;MACtGL,cAAc,CAACqC,WAAW,CAAC;MAC3BzC,cAAc,CAACyC,WAAW,CAAC;IAC7B,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdC,QAAQ,CAAC,iCAAiC,CAAC;IAC7C;EACF,CAAC;EAED,MAAM4B,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC7C,IAAI;MACF,MAAM1B,QAAQ,GAAG,MAAMlC,KAAK,CAACqD,KAAK,CAAC,gBAAgBzC,IAAI,CAACwB,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE;QAC1EkB,MAAM,EAAE,eAAe;QACvBO,SAAS,EAAED;MACb,CAAC,EAAE;QACDvB,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MACFX,UAAU,CAACK,QAAQ,CAACO,IAAI,CAACb,OAAO,CAAC;MACjC,MAAMkC,cAAc,GAAG1C,OAAO,CAAC6B,MAAM,CAAEc,MAAM,IAAKA,MAAM,CAACnB,EAAE,KAAKgB,QAAQ,CAAC;MACzEvC,UAAU,CAACyC,cAAc,CAAC;MAC1B,MAAMN,WAAW,GAAG;QAAE,GAAGtC,WAAW;QAAEE,OAAO,EAAE0C;MAAe,CAAC;MAC/D3C,cAAc,CAACqC,WAAW,CAAC;MAC3BzC,cAAc,CAACyC,WAAW,CAAC;IAC7B,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdC,QAAQ,CAAC,wBAAwB,CAAC;IACpC;EACF,CAAC;EAED,MAAMiC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAItC,cAAc,CAACoB,MAAM,KAAK,CAAC,EAAE;MAC/Bf,QAAQ,CAAC,qCAAqC,CAAC;MAC/C;IACF;IACA,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMlC,KAAK,CAACqD,KAAK,CAAC,gBAAgBzC,IAAI,CAACwB,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE;QAC1EkB,MAAM,EAAE,eAAe;QACvBW,SAAS,EAAEvC;MACb,CAAC,EAAE;QACDW,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MACFX,UAAU,CAACK,QAAQ,CAACO,IAAI,CAACb,OAAO,CAAC;MACjC,MAAMsC,aAAa,GAAGjD,MAAM,CAACgC,MAAM,CAAEN,KAAK,IAAKjB,cAAc,CAACyB,QAAQ,CAACR,KAAK,CAACC,EAAE,CAAC,CAAC;MACjF,MAAMY,WAAW,GAAG;QAAE,GAAGtC,WAAW;QAAED,MAAM,EAAEiD;MAAc,CAAC;MAC7D/C,cAAc,CAACqC,WAAW,CAAC;MAC3BzC,cAAc,CAACyC,WAAW,CAAC;MAC3BT,mBAAmB,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,QAAQ,CAAC,wBAAwB,CAAC;IACpC;EACF,CAAC;EAED,MAAMoC,iBAAiB,GAAIC,OAAO,IAAK;IACrC,IAAI1C,cAAc,CAACyB,QAAQ,CAACiB,OAAO,CAAC,EAAE;MACpCzC,iBAAiB,CAACD,cAAc,CAACuB,MAAM,CAACL,EAAE,IAAIA,EAAE,KAAKwB,OAAO,CAAC,CAAC;IAChE,CAAC,MAAM,IAAI1C,cAAc,CAACoB,MAAM,GAAG,CAAC,EAAE;MACpCnB,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAE0C,OAAO,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMnC,QAAQ,GAAG,MAAMlC,KAAK,CAACsE,MAAM,CAAC,gBAAgB1D,IAAI,CAACwB,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE;QAC3EC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MACFX,UAAU,CAACK,QAAQ,CAACO,IAAI,CAACb,OAAO,CAAC;MACjCf,sBAAsB,CAACD,IAAI,CAACwB,aAAa,CAACa,MAAM,CAAEsB,MAAM,IAAKA,MAAM,KAAKrD,WAAW,CAAC0B,EAAE,CAAC,CAAC;MACxF7B,cAAc,CAAC;QAAE,GAAGG,WAAW;QAAEsD,OAAO,EAAE;MAAK,CAAC,CAAC;MACjDxC,OAAO,CAACyC,IAAI,CAAC,aAAa,CAAC;IAC7B,CAAC,CAAC,OAAO3C,KAAK,EAAE;MACdC,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,IAAI,CAACb,WAAW,EAAE;IAChB,oBAAOT,OAAA;MAAAiE,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACErE,OAAA;IAAAiE,QAAA,gBACEjE,OAAA,CAACF,MAAM;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrE,OAAA;MAAKsE,SAAS,EAAE,oBAAoBjE,KAAK,EAAG;MAAA4D,QAAA,gBAC1CjE,OAAA;QAAKsE,SAAS,EAAC,aAAa;QAAAL,QAAA,gBAC1BjE,OAAA;UAAKsE,SAAS,EAAC,uBAAuB;UAAAL,QAAA,eACpCjE,OAAA;YAAAiE,QAAA,GAAI,kBAAgB,EAACxD,WAAW,GAAGA,WAAW,CAAC8D,IAAI,GAAG,YAAY;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC,eACNrE,OAAA;UAAKsE,SAAS,EAAC,YAAY;UAAAL,QAAA,gBACzBjE,OAAA;YAAAiE,QAAA,EAAI;UAA8B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACtC7D,MAAM,CAACyB,GAAG,CAAEC,KAAK,iBAChBlC,OAAA;YAAoBsE,SAAS,EAAC,YAAY;YAAAL,QAAA,gBACxCjE,OAAA;cACEwE,IAAI,EAAC,UAAU;cACfrC,EAAE,EAAE,SAASD,KAAK,CAACC,EAAE,EAAG;cACxBsC,KAAK,EAAEvC,KAAK,CAACC,EAAG;cAChBuC,OAAO,EAAEzD,cAAc,CAACyB,QAAQ,CAACR,KAAK,CAACC,EAAE,CAAE;cAC3CwC,QAAQ,EAAEA,CAAA,KAAMjB,iBAAiB,CAACxB,KAAK,CAACC,EAAE;YAAE;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eACFrE,OAAA;cAAO4E,OAAO,EAAE,SAAS1C,KAAK,CAACC,EAAE,EAAG;cAAA8B,QAAA,EAAE/B,KAAK,CAACqC;YAAI;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GARjDnC,KAAK,CAACC,EAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASb,CACN,CAAC,eACFrE,OAAA;YAAQ6E,OAAO,EAAEtB,kBAAmB;YAAAU,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNrE,OAAA;QAAKsE,SAAS,EAAC,eAAe;QAAAL,QAAA,eAC5BjE,OAAA;UAAKsE,SAAS,EAAC,gBAAgB;UAAAL,QAAA,gBAC7BjE,OAAA;YAAAiE,QAAA,EAAI;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/BrE,OAAA;YAAKsE,SAAS,EAAC,gBAAgB;YAAAL,QAAA,EAC5BpD,aAAa,CAACoB,GAAG,CAAEQ,IAAI,iBACtBzC,OAAA;cAAmBsE,SAAS,EAAC,WAAW;cAAAL,QAAA,gBACtCjE,OAAA;gBACEwE,IAAI,EAAC,OAAO;gBACZrC,EAAE,EAAE,QAAQM,IAAI,CAACN,EAAE,EAAG;gBACtBoC,IAAI,EAAC,cAAc;gBACnBE,KAAK,EAAEhC,IAAI,CAACN,EAAG;gBACfuC,OAAO,EAAE3D,cAAc,KAAK0B,IAAI,CAACN,EAAG;gBACpCwC,QAAQ,EAAEA,CAAA,KAAM3D,iBAAiB,CAACyB,IAAI,CAACN,EAAE;cAAE;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC,eACFrE,OAAA;gBAAO4E,OAAO,EAAE,QAAQnC,IAAI,CAACN,EAAE,EAAG;gBAAA8B,QAAA,EAAExB,IAAI,CAACqC;cAAK;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAT/C5B,IAAI,CAACN,EAAE;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUZ,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNrE,OAAA;YAAQ6E,OAAO,EAAElC,0BAA2B;YAAAsB,QAAA,EAAC;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNrE,OAAA;QAAKsE,SAAS,EAAC,cAAc;QAAAL,QAAA,eAC3BjE,OAAA;UAAKsE,SAAS,EAAC,gBAAgB;UAAAL,QAAA,gBAC7BjE,OAAA;YAAAiE,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBrE,OAAA;YAAAiE,QAAA,EACGtD,OAAO,CAACsB,GAAG,CAAEqB,MAAM,iBAClBtD,OAAA;cAAAiE,QAAA,GACGX,MAAM,CAACyB,QAAQ,eAChB/E,OAAA;gBAAQ6E,OAAO,EAAEA,CAAA,KAAM3B,kBAAkB,CAACI,MAAM,CAACnB,EAAE,CAAE;gBAAA8B,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAF9Df,MAAM,CAACnB,EAAE;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGd,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNrE,OAAA;MAAQ6E,OAAO,EAAEjB,gBAAiB;MAACU,SAAS,EAAC,eAAe;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChFlD,OAAO,iBAAInB,OAAA;MAAGsE,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAAE9C;IAAO;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvDhD,KAAK,iBAAIrB,OAAA;MAAGsE,SAAS,EAAC,eAAe;MAAAL,QAAA,EAAE5C;IAAK;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACnE,EAAA,CAnNID,UAAU;EAAA,QAcEJ,UAAU;AAAA;AAAAmF,EAAA,GAdtB/E,UAAU;AAqNhB,eAAeA,UAAU;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}