{"ast":null,"code":"var _jsxFileName = \"/home/levi/Development/book-club/client/src/components/context/ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { AuthContext } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    updateUserThemePreference\n  } = useContext(AuthContext);\n  const [theme, setTheme] = useState('light');\n  useEffect(() => {\n    if (user) {\n      setTheme(user.dark_mode ? 'dark' : 'light');\n    }\n  }, [user]);\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    if (user) {\n      updateUserThemePreference(newTheme === 'dark');\n    }\n  };\n  useEffect(() => {\n    document.body.className = theme === 'dark' ? 'dark-mode' : 'light-mode';\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"pKr6CqSs+Bd0ls9Maiyu+f9xXSw=\");\n_c = ThemeProvider;\nexport { ThemeContext, ThemeProvider };\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","user","updateUserThemePreference","theme","setTheme","dark_mode","toggleTheme","newTheme","document","body","className","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/levi/Development/book-club/client/src/components/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { AuthContext } from './AuthContext';\n\nconst ThemeContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n  const { user, updateUserThemePreference } = useContext(AuthContext);\n  const [theme, setTheme] = useState('light');\n\n  useEffect(() => {\n    if (user) {\n      setTheme(user.dark_mode ? 'dark' : 'light');\n    }\n  }, [user]);\n\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    if (user) {\n      updateUserThemePreference(newTheme === 'dark');\n    }\n  };\n\n  useEffect(() => {\n    document.body.className = theme === 'dark' ? 'dark-mode' : 'light-mode';\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport { ThemeContext, ThemeProvider };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,MAAMQ,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM;IAAEC,IAAI;IAAEC;EAA0B,CAAC,GAAGT,UAAU,CAACC,WAAW,CAAC;EACnE,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,EAAE;MACRG,QAAQ,CAACH,IAAI,CAACI,SAAS,GAAG,MAAM,GAAG,OAAO,CAAC;IAC7C;EACF,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGJ,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,QAAQ,CAACG,QAAQ,CAAC;IAClB,IAAIN,IAAI,EAAE;MACRC,yBAAyB,CAACK,QAAQ,KAAK,MAAM,CAAC;IAChD;EACF,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGP,KAAK,KAAK,MAAM,GAAG,WAAW,GAAG,YAAY;EACzE,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEP,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAET,KAAK;MAAEG;IAAY,CAAE;IAAAP,QAAA,EAClDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAChB,EAAA,CA3BIF,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AA6BnB,SAASD,YAAY,EAAEC,aAAa;AAAG,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}