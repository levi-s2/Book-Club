{"ast":null,"code":"var _jsxFileName = \"/home/levi/Development/book-club/client/src/components/ManageClub.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { AuthContext } from './context/AuthContext';\nimport { BookClubsContext } from './context/BookClubsContext';\nimport { BooksContext } from './context/BooksContext';\nimport { GenresContext } from './context/GenresContext';\nimport { ThemeContext } from './context/ThemeContext';\nimport { useHistory } from 'react-router-dom';\nimport { Form as AntForm, Checkbox, Button } from 'antd';\nimport NavBar from './NavBar';\nimport './css/ManageClub.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageClub = () => {\n  _s();\n  const {\n    user,\n    updateUserCreatedClubs\n  } = useContext(AuthContext);\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const {\n    fetchManageClubDetails,\n    updateBookClub,\n    updateCurrentReading,\n    removeMember,\n    updateGenres,\n    deleteClub\n  } = useContext(BookClubsContext);\n  const {\n    books\n  } = useContext(BooksContext);\n  const {\n    genres\n  } = useContext(GenresContext);\n  const [clubDetails, setClubDetails] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const [selectedBookId, setSelectedBookId] = useState('');\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const fetchClubDetails = useCallback(async () => {\n    try {\n      if (user && user.created_clubs && user.created_clubs.length > 0) {\n        const clubId = user.created_clubs[0].id || user.created_clubs[0];\n        console.log('Fetching details for club ID:', clubId);\n        const details = await fetchManageClubDetails(clubId);\n        if (details) {\n          setClubDetails(details);\n          setMembers(details.members);\n          setSelectedGenres(details.genres.map(genre => genre.id));\n        } else {\n          setError('Error fetching club details.');\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching club details:', error);\n      setError('Error fetching club details.');\n    }\n  }, [user, fetchManageClubDetails]);\n  useEffect(() => {\n    fetchClubDetails();\n  }, [fetchClubDetails]);\n  const filterBooksByGenres = useCallback(() => {\n    if (selectedGenres.length > 0) {\n      const filtered = books.filter(book => selectedGenres.includes(book.genre.id));\n      setFilteredBooks(filtered);\n    } else {\n      setFilteredBooks(books);\n    }\n  }, [selectedGenres, books]);\n  useEffect(() => {\n    filterBooksByGenres();\n  }, [selectedGenres, books, filterBooksByGenres]);\n  const handleUpdateCurrentReading = async () => {\n    if (!selectedBookId) {\n      setError('You must select a book.');\n      return;\n    }\n    const selectedBook = books.find(book => book.id === selectedBookId);\n    if (!selectedGenres.includes(selectedBook.genre.id)) {\n      setError('The selected book does not match the club genres.');\n      return;\n    }\n    try {\n      const clubId = user.created_clubs[0].id || user.created_clubs[0];\n      const response = await updateCurrentReading(clubId, selectedBookId);\n      setMessage(response.message);\n      const updatedClub = {\n        ...clubDetails,\n        current_book: selectedBook\n      };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n    } catch (error) {\n      setError('Error updating current reading.');\n    }\n  };\n  const handleRemoveMember = async memberId => {\n    try {\n      const clubId = user.created_clubs[0].id || user.created_clubs[0];\n      const response = await removeMember(clubId, memberId);\n      setMessage(response.message);\n      const updatedMembers = members.filter(member => member.id !== memberId);\n      setMembers(updatedMembers);\n      const updatedClub = {\n        ...clubDetails,\n        members: updatedMembers\n      };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n    } catch (error) {\n      setError('Error removing member.');\n    }\n  };\n  const handleUpdateGenres = async () => {\n    if (selectedGenres.length === 0) {\n      setError('You must select at least one genre.');\n      return;\n    }\n    try {\n      const clubId = user.created_clubs[0].id || user.created_clubs[0];\n      const response = await updateGenres(clubId, selectedGenres);\n      setMessage(response.message);\n      const updatedGenres = genres.filter(genre => selectedGenres.includes(genre.id));\n      const updatedClub = {\n        ...clubDetails,\n        genres: updatedGenres\n      };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n      filterBooksByGenres();\n    } catch (error) {\n      setError('Error updating genres.');\n    }\n  };\n  const handleGenreChange = genreId => {\n    if (selectedGenres.includes(genreId)) {\n      setSelectedGenres(selectedGenres.filter(id => id !== genreId));\n    } else if (selectedGenres.length < 3) {\n      setSelectedGenres([...selectedGenres, genreId]);\n    }\n  };\n  const handleDeleteClub = async () => {\n    try {\n      const clubId = user.created_clubs[0].id || user.created_clubs[0];\n      const response = await deleteClub(clubId);\n      setMessage(response.message);\n      const updatedClubs = user.created_clubs.filter(club => club.id !== clubId);\n      updateUserCreatedClubs(updatedClubs);\n      updateBookClub({\n        ...clubDetails,\n        deleted: true\n      });\n      history.push('/book-clubs');\n    } catch (error) {\n      setError('Error deleting book club.');\n    }\n  };\n  if (!clubDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `manage-club-page ${theme}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manage-club-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Manage My Club: \", clubDetails ? clubDetails.name : 'Loading...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AntForm.Item, {\n          label: \"Update Genres (select up to 3)\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-list\",\n            children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"genre-item\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                id: `genre-${genre.id}`,\n                checked: selectedGenres.includes(genre.id),\n                onChange: () => handleGenreChange(genre.id),\n                children: genre.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)\n            }, genre.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: handleUpdateGenres,\n            className: \"update-button\",\n            children: \"Update Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: handleDeleteClub,\n              className: \"delete-button\",\n              children: \"Delete Club\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manage-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Update Current Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"book-selection\",\n            children: filteredBooks.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-item\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                type: \"radio\",\n                id: `book-${book.id}`,\n                name: \"selectedBook\",\n                value: book.id,\n                checked: selectedBookId === book.id,\n                onChange: () => setSelectedBookId(book.id),\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)\n            }, book.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: handleUpdateCurrentReading,\n            className: \"update-button\",\n            children: \"Update Current Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manage-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Remove Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: members.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [member.username, /*#__PURE__*/_jsxDEV(Button, {\n                type: \"danger\",\n                onClick: () => handleRemoveMember(member.id),\n                className: \"remove-button\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, member.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageClub, \"OoIE47bbVwjjQ4dYs0hRGdD0xLg=\", false, function () {\n  return [useHistory];\n});\n_c = ManageClub;\nexport default ManageClub;\nvar _c;\n$RefreshReg$(_c, \"ManageClub\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useCallback","AuthContext","BookClubsContext","BooksContext","GenresContext","ThemeContext","useHistory","Form","AntForm","Checkbox","Button","NavBar","jsxDEV","_jsxDEV","ManageClub","_s","user","updateUserCreatedClubs","theme","fetchManageClubDetails","updateBookClub","updateCurrentReading","removeMember","updateGenres","deleteClub","books","genres","clubDetails","setClubDetails","members","setMembers","filteredBooks","setFilteredBooks","selectedBookId","setSelectedBookId","selectedGenres","setSelectedGenres","message","setMessage","error","setError","history","fetchClubDetails","created_clubs","length","clubId","id","console","log","details","map","genre","filterBooksByGenres","filtered","filter","book","includes","handleUpdateCurrentReading","selectedBook","find","response","updatedClub","current_book","handleRemoveMember","memberId","updatedMembers","member","handleUpdateGenres","updatedGenres","handleGenreChange","genreId","handleDeleteClub","updatedClubs","club","deleted","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","Item","label","checked","onChange","type","onClick","value","title","username","_c","$RefreshReg$"],"sources":["/home/levi/Development/book-club/client/src/components/ManageClub.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { AuthContext } from './context/AuthContext';\nimport { BookClubsContext } from './context/BookClubsContext';\nimport { BooksContext } from './context/BooksContext';\nimport { GenresContext } from './context/GenresContext';\nimport { ThemeContext } from './context/ThemeContext';\nimport { useHistory } from 'react-router-dom';\nimport { Form as AntForm, Checkbox, Button } from 'antd';\nimport NavBar from './NavBar';\nimport './css/ManageClub.css';\n\nconst ManageClub = () => {\n  const { user, updateUserCreatedClubs } = useContext(AuthContext);\n  const { theme } = useContext(ThemeContext);\n  const { fetchManageClubDetails, updateBookClub, updateCurrentReading, removeMember, updateGenres, deleteClub } = useContext(BookClubsContext);\n  const { books } = useContext(BooksContext);\n  const { genres } = useContext(GenresContext);\n  const [clubDetails, setClubDetails] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const [selectedBookId, setSelectedBookId] = useState('');\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  const fetchClubDetails = useCallback(async () => {\n    try {\n      if (user && user.created_clubs && user.created_clubs.length > 0) {\n        const clubId = user.created_clubs[0].id || user.created_clubs[0];\n        console.log('Fetching details for club ID:', clubId);\n        const details = await fetchManageClubDetails(clubId);\n        if (details) {\n          setClubDetails(details);\n          setMembers(details.members);\n          setSelectedGenres(details.genres.map((genre) => genre.id));\n        } else {\n          setError('Error fetching club details.');\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching club details:', error);\n      setError('Error fetching club details.');\n    }\n  }, [user, fetchManageClubDetails]);\n\n  useEffect(() => {\n    fetchClubDetails();\n  }, [fetchClubDetails]);\n\n  const filterBooksByGenres = useCallback(() => {\n    if (selectedGenres.length > 0) {\n      const filtered = books.filter((book) =>\n        selectedGenres.includes(book.genre.id)\n      );\n      setFilteredBooks(filtered);\n    } else {\n      setFilteredBooks(books);\n    }\n  }, [selectedGenres, books]);\n\n  useEffect(() => {\n    filterBooksByGenres();\n  }, [selectedGenres, books, filterBooksByGenres]);\n\n  const handleUpdateCurrentReading = async () => {\n    if (!selectedBookId) {\n      setError('You must select a book.');\n      return;\n    }\n\n    const selectedBook = books.find((book) => book.id === selectedBookId);\n\n    if (!selectedGenres.includes(selectedBook.genre.id)) {\n      setError('The selected book does not match the club genres.');\n      return;\n    }\n\n    try {\n      const clubId = user.created_clubs[0].id || user.created_clubs[0];\n      const response = await updateCurrentReading(clubId, selectedBookId);\n      setMessage(response.message);\n      const updatedClub = { ...clubDetails, current_book: selectedBook };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n    } catch (error) {\n      setError('Error updating current reading.');\n    }\n  };\n\n  const handleRemoveMember = async (memberId) => {\n    try {\n      const clubId = user.created_clubs[0].id || user.created_clubs[0];\n      const response = await removeMember(clubId, memberId);\n      setMessage(response.message);\n      const updatedMembers = members.filter((member) => member.id !== memberId);\n      setMembers(updatedMembers);\n      const updatedClub = { ...clubDetails, members: updatedMembers };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n    } catch (error) {\n      setError('Error removing member.');\n    }\n  };\n\n  const handleUpdateGenres = async () => {\n    if (selectedGenres.length === 0) {\n      setError('You must select at least one genre.');\n      return;\n    }\n    try {\n      const clubId = user.created_clubs[0].id || user.created_clubs[0];\n      const response = await updateGenres(clubId, selectedGenres);\n      setMessage(response.message);\n      const updatedGenres = genres.filter((genre) => selectedGenres.includes(genre.id));\n      const updatedClub = { ...clubDetails, genres: updatedGenres };\n      setClubDetails(updatedClub);\n      updateBookClub(updatedClub);\n      filterBooksByGenres();\n    } catch (error) {\n      setError('Error updating genres.');\n    }\n  };\n\n  const handleGenreChange = (genreId) => {\n    if (selectedGenres.includes(genreId)) {\n      setSelectedGenres(selectedGenres.filter(id => id !== genreId));\n    } else if (selectedGenres.length < 3) {\n      setSelectedGenres([...selectedGenres, genreId]);\n    }\n  };\n\n  const handleDeleteClub = async () => {\n    try {\n      const clubId = user.created_clubs[0].id || user.created_clubs[0];\n      const response = await deleteClub(clubId);\n      setMessage(response.message);\n\n      const updatedClubs = user.created_clubs.filter((club) => club.id !== clubId);\n      updateUserCreatedClubs(updatedClubs);\n\n      updateBookClub({ ...clubDetails, deleted: true });\n\n      history.push('/book-clubs');\n    } catch (error) {\n      setError('Error deleting book club.');\n    }\n  };\n\n  if (!clubDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <NavBar />\n      <div className={`manage-club-page ${theme}`}>\n        <div className=\"left-column\">\n          <div className=\"manage-club-container\">\n            <h2>Manage My Club: {clubDetails ? clubDetails.name : 'Loading...'}</h2>\n          </div>\n          <AntForm.Item label=\"Update Genres (select up to 3)\">\n            <div className=\"genre-list\">\n              {genres.map((genre) => (\n                <div key={genre.id} className=\"genre-item\">\n                  <Checkbox\n                    id={`genre-${genre.id}`}\n                    checked={selectedGenres.includes(genre.id)}\n                    onChange={() => handleGenreChange(genre.id)}\n                  >\n                    {genre.name}\n                  </Checkbox>\n                </div>\n              ))}\n            </div>\n            <Button type=\"primary\" onClick={handleUpdateGenres} className=\"update-button\">\n              Update Genres\n            </Button>\n            <div>\n              <Button type=\"danger\" onClick={handleDeleteClub} className=\"delete-button\">\n                Delete Club\n              </Button>\n            </div>\n          </AntForm.Item>\n        </div>\n        <div className=\"center-column\">\n          <div className=\"manage-section\">\n            <h3>Update Current Reading</h3>\n            <div className=\"book-selection\">\n              {filteredBooks.map((book) => (\n                <div key={book.id} className=\"book-item\">\n                  <Checkbox\n                    type=\"radio\"\n                    id={`book-${book.id}`}\n                    name=\"selectedBook\"\n                    value={book.id}\n                    checked={selectedBookId === book.id}\n                    onChange={() => setSelectedBookId(book.id)}\n                  >\n                    {book.title}\n                  </Checkbox>\n                </div>\n              ))}\n            </div>\n            <Button type=\"primary\" onClick={handleUpdateCurrentReading} className=\"update-button\">\n              Update Current Reading\n            </Button>\n          </div>\n        </div>\n        <div className=\"right-column\">\n          <div className=\"manage-section\">\n            <h3>Remove Members</h3>\n            <ul>\n              {members.map((member) => (\n                <li key={member.id}>\n                  {member.username}\n                  <Button type=\"danger\" onClick={() => handleRemoveMember(member.id)} className=\"remove-button\">\n                    Remove\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        {message && <p className=\"success-message\">{message}</p>}\n        {error && <p className=\"error-message\">{error}</p>}\n      </div>\n    </div>\n  );  \n};\n\nexport default ManageClub;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}