{"ast":null,"code":"var _jsxFileName = \"/home/levi/Development/book-club/client/src/components/UserUpdate.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { AuthContext } from './context/AuthContext';\nimport { Form as AntForm, Input, Button, message } from 'antd';\nimport './css/UserUpdate.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserUpdate = ({\n  user\n}) => {\n  _s();\n  const {\n    updateUsername,\n    updateEmail,\n    updatePassword,\n    authenticateUser,\n    setUser\n  } = useContext(AuthContext);\n  const validationSchema = Yup.object({\n    username: Yup.string().min(3, 'Username must be at least 3 characters long').max(30, 'Username cannot be longer than 30 characters').required('Username is required'),\n    email: Yup.string().email('Invalid email address').required('Email is required'),\n    currentPassword: Yup.string().required('Current password is required'),\n    newPassword: Yup.string().min(6, 'New password must be at least 6 characters long')\n  });\n  const handleUpdate = async (values, {\n    setSubmitting,\n    setErrors,\n    resetForm\n  }) => {\n    try {\n      const isAuthenticated = await authenticateUser(user.email, values.currentPassword);\n      if (!isAuthenticated) {\n        setErrors({\n          currentPassword: 'Current password is incorrect'\n        });\n        setSubmitting(false);\n        return;\n      }\n      const updatedUser = {\n        ...user\n      };\n      if (values.username !== user.username) {\n        await updateUsername(user.id, values.username);\n        updatedUser.username = values.username;\n      }\n      if (values.email !== user.email) {\n        await updateEmail(user.id, values.email);\n        updatedUser.email = values.email;\n      }\n      if (values.newPassword) {\n        await updatePassword(user.id, values.newPassword);\n      }\n      setUser(updatedUser);\n      message.success('Profile updated successfully!');\n      resetForm();\n    } catch (error) {\n      setErrors({\n        general: 'Update failed: ' + error.message\n      });\n      message.error('Update failed. Please try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-update-container\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: user.username,\n        email: user.email,\n        currentPassword: '',\n        newPassword: ''\n      },\n      validationSchema: validationSchema,\n      onSubmit: handleUpdate,\n      children: ({\n        isSubmitting,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"user-update-form\",\n        children: [/*#__PURE__*/_jsxDEV(AntForm.Item, {\n          label: \"Username\",\n          name: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: Input,\n            name: \"username\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"username\",\n            component: \"div\",\n            className: \"error-message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AntForm.Item, {\n          label: \"Email\",\n          name: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: Input,\n            name: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\",\n            className: \"error-message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AntForm.Item, {\n          label: \"Current Password\",\n          name: \"currentPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: Input.Password,\n            name: \"currentPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"currentPassword\",\n            component: \"div\",\n            className: \"error-message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AntForm.Item, {\n          label: \"New Password\",\n          name: \"newPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: Input.Password,\n            name: \"newPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"newPassword\",\n            component: \"div\",\n            className: \"error-message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          disabled: isSubmitting,\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), errors.general && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errors.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(UserUpdate, \"Y1IcfDn2GdfDZpObUhdlVrxWjI4=\");\n_c = UserUpdate;\nexport default UserUpdate;\nvar _c;\n$RefreshReg$(_c, \"UserUpdate\");","map":{"version":3,"names":["React","useContext","Formik","Form","Field","ErrorMessage","Yup","AuthContext","AntForm","Input","Button","message","jsxDEV","_jsxDEV","UserUpdate","user","_s","updateUsername","updateEmail","updatePassword","authenticateUser","setUser","validationSchema","object","username","string","min","max","required","email","currentPassword","newPassword","handleUpdate","values","setSubmitting","setErrors","resetForm","isAuthenticated","updatedUser","id","success","error","general","className","children","initialValues","onSubmit","isSubmitting","errors","Item","label","name","as","type","fileName","_jsxFileName","lineNumber","columnNumber","component","Password","htmlType","disabled","_c","$RefreshReg$"],"sources":["/home/levi/Development/book-club/client/src/components/UserUpdate.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { AuthContext } from './context/AuthContext';\nimport { Form as AntForm, Input, Button, message } from 'antd';\nimport './css/UserUpdate.css';\n\nconst UserUpdate = ({ user }) => {\n  const { updateUsername, updateEmail, updatePassword, authenticateUser, setUser } = useContext(AuthContext);\n\n  const validationSchema = Yup.object({\n    username: Yup.string()\n      .min(3, 'Username must be at least 3 characters long')\n      .max(30, 'Username cannot be longer than 30 characters')\n      .required('Username is required'),\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Email is required'),\n    currentPassword: Yup.string()\n      .required('Current password is required'),\n    newPassword: Yup.string()\n      .min(6, 'New password must be at least 6 characters long'),\n  });\n\n  const handleUpdate = async (values, { setSubmitting, setErrors, resetForm }) => {\n    try {\n      const isAuthenticated = await authenticateUser(user.email, values.currentPassword);\n      if (!isAuthenticated) {\n        setErrors({ currentPassword: 'Current password is incorrect' });\n        setSubmitting(false);\n        return;\n      }\n\n      const updatedUser = { ...user };\n      if (values.username !== user.username) {\n        await updateUsername(user.id, values.username);\n        updatedUser.username = values.username;\n      }\n      if (values.email !== user.email) {\n        await updateEmail(user.id, values.email);\n        updatedUser.email = values.email;\n      }\n      if (values.newPassword) {\n        await updatePassword(user.id, values.newPassword);\n      }\n\n      setUser(updatedUser); \n      message.success('Profile updated successfully!');\n      resetForm();\n    } catch (error) {\n      setErrors({ general: 'Update failed: ' + error.message });\n      message.error('Update failed. Please try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"user-update-container\">\n      <Formik\n        initialValues={{\n          username: user.username,\n          email: user.email,\n          currentPassword: '',\n          newPassword: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleUpdate}\n      >\n        {({ isSubmitting, errors }) => (\n          <Form className=\"user-update-form\">\n            <AntForm.Item label=\"Username\" name=\"username\">\n              <Field as={Input} name=\"username\" type=\"text\" />\n              <ErrorMessage name=\"username\" component=\"div\" className=\"error-message\" />\n            </AntForm.Item>\n            <AntForm.Item label=\"Email\" name=\"email\">\n              <Field as={Input} name=\"email\" type=\"email\" />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"error-message\" />\n            </AntForm.Item>\n            <AntForm.Item label=\"Current Password\" name=\"currentPassword\">\n              <Field as={Input.Password} name=\"currentPassword\" />\n              <ErrorMessage name=\"currentPassword\" component=\"div\" className=\"error-message\" />\n            </AntForm.Item>\n            <AntForm.Item label=\"New Password\" name=\"newPassword\">\n              <Field as={Input.Password} name=\"newPassword\" />\n              <ErrorMessage name=\"newPassword\" component=\"div\" className=\"error-message\" />\n            </AntForm.Item>\n            <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n              Update Profile\n            </Button>\n            {errors.general && <p className=\"error-message\">{errors.general}</p>}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default UserUpdate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}