{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import axios from'../axiosConfig';import{jsx as _jsx}from\"react/jsx-runtime\";const BooksContext=/*#__PURE__*/createContext();const BooksProvider=_ref=>{let{children}=_ref;const[books,setBooks]=useState([]);const[selectedGenres,setSelectedGenres]=useState([]);useEffect(()=>{const fetchBooks=async()=>{try{const response=await axios.get('/books');setBooks(response.data);}catch(error){console.error('Error fetching books:',error);}};fetchBooks();},[]);useEffect(()=>{const fetchBooksByGenre=async()=>{if(selectedGenres.length>0){try{const response=await axios.get('/books',{params:{genre_ids:selectedGenres}});setBooks(response.data);}catch(error){console.error('Error fetching books by genre:',error);}}};fetchBooksByGenre();},[selectedGenres]);return/*#__PURE__*/_jsx(BooksContext.Provider,{value:{books,setSelectedGenres},children:children});};export{BooksContext,BooksProvider};","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsx","_jsx","BooksContext","BooksProvider","_ref","children","books","setBooks","selectedGenres","setSelectedGenres","fetchBooks","response","get","data","error","console","fetchBooksByGenre","length","params","genre_ids","Provider","value"],"sources":["/home/levi/Development/book-club/client/src/components/context/BooksContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from '../axiosConfig';\n\nconst BooksContext = createContext();\n\nconst BooksProvider = ({ children }) => {\n  const [books, setBooks] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await axios.get('/books');\n        setBooks(response.data);\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      }\n    };\n\n    fetchBooks();\n  }, []);\n\n  useEffect(() => {\n    const fetchBooksByGenre = async () => {\n      if (selectedGenres.length > 0) {\n        try {\n          const response = await axios.get('/books', {\n            params: { genre_ids: selectedGenres },\n          });\n          setBooks(response.data);\n        } catch (error) {\n          console.error('Error fetching books by genre:', error);\n        }\n      }\n    };\n\n    fetchBooksByGenre();\n  }, [selectedGenres]);\n\n\n  return (\n    <BooksContext.Provider value={{ books, setSelectedGenres }}>\n      {children}\n    </BooksContext.Provider>\n  );\n};\n\nexport { BooksContext, BooksProvider };\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnC,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,KAAM,CAAAO,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACjC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,cAAc,CAAEC,iBAAiB,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAExDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,CAAC,QAAQ,CAAC,CAC1CL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAEDJ,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAENZ,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkB,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAIR,cAAc,CAACS,MAAM,CAAG,CAAC,CAAE,CAC7B,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,CAAC,QAAQ,CAAE,CACzCM,MAAM,CAAE,CAAEC,SAAS,CAAEX,cAAe,CACtC,CAAC,CAAC,CACFD,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACxD,CACF,CACF,CAAC,CAEDE,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAAE,CAACR,cAAc,CAAC,CAAC,CAGpB,mBACEP,IAAA,CAACC,YAAY,CAACkB,QAAQ,EAACC,KAAK,CAAE,CAAEf,KAAK,CAAEG,iBAAkB,CAAE,CAAAJ,QAAA,CACxDA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,OAASH,YAAY,CAAEC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}