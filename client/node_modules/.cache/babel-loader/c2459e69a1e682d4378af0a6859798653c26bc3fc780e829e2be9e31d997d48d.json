{"ast":null,"code":"import React,{useContext}from'react';import{Route,Redirect}from'react-router-dom';import{AuthContext}from'./context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{component:Component,...rest}=_ref;const{user,loading}=useContext(AuthContext);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(Route,{...rest,render:props=>user?/*#__PURE__*/_jsx(Component,{...props}):/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/',state:{from:props.location}}})});};export default ProtectedRoute;","map":{"version":3,"names":["React","useContext","Route","Redirect","AuthContext","jsx","_jsx","ProtectedRoute","_ref","component","Component","rest","user","loading","children","render","props","to","pathname","state","from","location"],"sources":["/home/levi/Development/book-club/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './context/AuthContext';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const { user, loading } = useContext(AuthContext);\n\n  if (loading) {\n    return <div>Loading...</div>; \n  }\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAClD,OAASC,WAAW,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAuC,IAAtC,CAAEC,SAAS,CAAEC,SAAS,CAAE,GAAGC,IAAK,CAAC,CAAAH,IAAA,CACvD,KAAM,CAAEI,IAAI,CAAEC,OAAQ,CAAC,CAAGZ,UAAU,CAACG,WAAW,CAAC,CAEjD,GAAIS,OAAO,CAAE,CACX,mBAAOP,IAAA,QAAAQ,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAEA,mBACER,IAAA,CAACJ,KAAK,KACAS,IAAI,CACRI,MAAM,CAAGC,KAAK,EACZJ,IAAI,cACFN,IAAA,CAACI,SAAS,KAAKM,KAAK,CAAG,CAAC,cAExBV,IAAA,CAACH,QAAQ,EAACc,EAAE,CAAE,CAAEC,QAAQ,CAAE,GAAG,CAAEC,KAAK,CAAE,CAAEC,IAAI,CAAEJ,KAAK,CAACK,QAAS,CAAE,CAAE,CAAE,CAEtE,CACF,CAAC,CAEN,CAAC,CAED,cAAe,CAAAd,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}