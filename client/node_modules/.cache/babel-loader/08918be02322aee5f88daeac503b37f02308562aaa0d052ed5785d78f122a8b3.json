{"ast":null,"code":"import React,{useContext}from'react';import{Formik,Form,Field,ErrorMessage}from'formik';import*as Yup from'yup';import{AuthContext}from'./context/AuthContext';import{Form as AntForm,Input,Button,message}from'antd';import'./css/UserUpdate.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserUpdate=_ref=>{let{user}=_ref;const{updateUsername,updateEmail,updatePassword,authenticateUser,setUser}=useContext(AuthContext);const validationSchema=Yup.object({username:Yup.string().min(3,'Username must be at least 3 characters long').max(30,'Username cannot be longer than 30 characters').required('Username is required'),email:Yup.string().email('Invalid email address').required('Email is required'),currentPassword:Yup.string().required('Current password is required'),newPassword:Yup.string().min(6,'New password must be at least 6 characters long')});const handleUpdate=async(values,_ref2)=>{let{setSubmitting,setErrors,resetForm}=_ref2;try{const isAuthenticated=await authenticateUser(user.email,values.currentPassword);if(!isAuthenticated){setErrors({currentPassword:'Current password is incorrect'});setSubmitting(false);return;}const updatedUser={...user};if(values.username!==user.username){await updateUsername(user.id,values.username);updatedUser.username=values.username;}if(values.email!==user.email){await updateEmail(user.id,values.email);updatedUser.email=values.email;}if(values.newPassword){await updatePassword(user.id,values.newPassword);}setUser(updatedUser);message.success('Profile updated successfully!');resetForm();}catch(error){setErrors({general:'Update failed: '+error.message});message.error('Update failed. Please try again.');}finally{setSubmitting(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"user-update-container\",children:/*#__PURE__*/_jsx(Formik,{initialValues:{username:user.username,email:user.email,currentPassword:'',newPassword:''},validationSchema:validationSchema,onSubmit:handleUpdate,children:_ref3=>{let{isSubmitting,errors}=_ref3;return/*#__PURE__*/_jsxs(Form,{className:\"user-update-form\",children:[/*#__PURE__*/_jsxs(AntForm.Item,{label:\"Username\",name:\"username\",children:[/*#__PURE__*/_jsx(Field,{as:Input,name:\"username\",type:\"text\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"username\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsxs(AntForm.Item,{label:\"Email\",name:\"email\",children:[/*#__PURE__*/_jsx(Field,{as:Input,name:\"email\",type:\"email\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsxs(AntForm.Item,{label:\"Current Password\",name:\"currentPassword\",children:[/*#__PURE__*/_jsx(Field,{as:Input.Password,name:\"currentPassword\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"currentPassword\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsxs(AntForm.Item,{label:\"New Password\",name:\"newPassword\",children:[/*#__PURE__*/_jsx(Field,{as:Input.Password,name:\"newPassword\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"newPassword\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",disabled:isSubmitting,children:\"Update Profile\"}),errors.general&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errors.general})]});}})});};export default UserUpdate;","map":{"version":3,"names":["React","useContext","Formik","Form","Field","ErrorMessage","Yup","AuthContext","AntForm","Input","Button","message","jsx","_jsx","jsxs","_jsxs","UserUpdate","_ref","user","updateUsername","updateEmail","updatePassword","authenticateUser","setUser","validationSchema","object","username","string","min","max","required","email","currentPassword","newPassword","handleUpdate","values","_ref2","setSubmitting","setErrors","resetForm","isAuthenticated","updatedUser","id","success","error","general","className","children","initialValues","onSubmit","_ref3","isSubmitting","errors","Item","label","name","as","type","component","Password","htmlType","disabled"],"sources":["/home/levi/Development/book-club/client/src/components/UserUpdate.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { AuthContext } from './context/AuthContext';\nimport { Form as AntForm, Input, Button, message } from 'antd';\nimport './css/UserUpdate.css';\n\nconst UserUpdate = ({ user }) => {\n  const { updateUsername, updateEmail, updatePassword, authenticateUser, setUser } = useContext(AuthContext);\n\n  const validationSchema = Yup.object({\n    username: Yup.string()\n      .min(3, 'Username must be at least 3 characters long')\n      .max(30, 'Username cannot be longer than 30 characters')\n      .required('Username is required'),\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Email is required'),\n    currentPassword: Yup.string()\n      .required('Current password is required'),\n    newPassword: Yup.string()\n      .min(6, 'New password must be at least 6 characters long'),\n  });\n\n  const handleUpdate = async (values, { setSubmitting, setErrors, resetForm }) => {\n    try {\n      const isAuthenticated = await authenticateUser(user.email, values.currentPassword);\n      if (!isAuthenticated) {\n        setErrors({ currentPassword: 'Current password is incorrect' });\n        setSubmitting(false);\n        return;\n      }\n\n      const updatedUser = { ...user };\n      if (values.username !== user.username) {\n        await updateUsername(user.id, values.username);\n        updatedUser.username = values.username;\n      }\n      if (values.email !== user.email) {\n        await updateEmail(user.id, values.email);\n        updatedUser.email = values.email;\n      }\n      if (values.newPassword) {\n        await updatePassword(user.id, values.newPassword);\n      }\n\n      setUser(updatedUser); \n      message.success('Profile updated successfully!');\n      resetForm();\n    } catch (error) {\n      setErrors({ general: 'Update failed: ' + error.message });\n      message.error('Update failed. Please try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"user-update-container\">\n      <Formik\n        initialValues={{\n          username: user.username,\n          email: user.email,\n          currentPassword: '',\n          newPassword: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleUpdate}\n      >\n        {({ isSubmitting, errors }) => (\n          <Form className=\"user-update-form\">\n            <AntForm.Item label=\"Username\" name=\"username\">\n              <Field as={Input} name=\"username\" type=\"text\" />\n              <ErrorMessage name=\"username\" component=\"div\" className=\"error-message\" />\n            </AntForm.Item>\n            <AntForm.Item label=\"Email\" name=\"email\">\n              <Field as={Input} name=\"email\" type=\"email\" />\n              <ErrorMessage name=\"email\" component=\"div\" className=\"error-message\" />\n            </AntForm.Item>\n            <AntForm.Item label=\"Current Password\" name=\"currentPassword\">\n              <Field as={Input.Password} name=\"currentPassword\" />\n              <ErrorMessage name=\"currentPassword\" component=\"div\" className=\"error-message\" />\n            </AntForm.Item>\n            <AntForm.Item label=\"New Password\" name=\"newPassword\">\n              <Field as={Input.Password} name=\"newPassword\" />\n              <ErrorMessage name=\"newPassword\" component=\"div\" className=\"error-message\" />\n            </AntForm.Item>\n            <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n              Update Profile\n            </Button>\n            {errors.general && <p className=\"error-message\">{errors.general}</p>}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default UserUpdate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}