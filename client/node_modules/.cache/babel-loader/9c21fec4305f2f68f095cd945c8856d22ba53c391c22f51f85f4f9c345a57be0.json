{"ast":null,"code":"var _jsxFileName = \"/home/levi/Development/code/phase-5/book-club/client/src/components/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from './axiosConfig';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      console.log('Stored token:', token);\n      try {\n        const decodedUser = jwtDecode(token);\n        setUser(decodedUser);\n      } catch (error) {\n        console.error('Invalid token at startup:', error);\n      }\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/login', {\n        email,\n        password\n      });\n      const {\n        access_token\n      } = response.data;\n      console.log('Received access token:', access_token);\n      localStorage.setItem('token', access_token);\n      const decodedUser = jwtDecode(access_token);\n      setUser(decodedUser);\n    } catch (error) {\n      console.error('Login error', error);\n      throw error;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      await axios.post('/register', {\n        username,\n        email,\n        password\n      });\n    } catch (error) {\n      console.error('Registration error', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport { AuthProvider, AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","console","log","decodedUser","error","login","email","password","response","post","access_token","data","setItem","register","username","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/levi/Development/code/phase-5/book-club/client/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from './axiosConfig';\nimport { jwtDecode } from 'jwt-decode';\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      console.log('Stored token:', token);\n      try {\n        const decodedUser = jwtDecode(token);\n        setUser(decodedUser);\n      } catch (error) {\n        console.error('Invalid token at startup:', error);\n      }\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/login', { email, password });\n      const { access_token } = response.data;\n      console.log('Received access token:', access_token);\n      localStorage.setItem('token', access_token);\n      const decodedUser = jwtDecode(access_token);\n      setUser(decodedUser);\n    } catch (error) {\n      console.error('Login error', error);\n      throw error;\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      await axios.post('/register', { username, email, password });\n    } catch (error) {\n      console.error('Registration error', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthProvider, AuthContext };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,KAAK,CAAC;MACnC,IAAI;QACF,MAAMK,WAAW,GAAGd,SAAS,CAACS,KAAK,CAAC;QACpCD,OAAO,CAACM,WAAW,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,QAAQ,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAChE,MAAM;QAAEG;MAAa,CAAC,GAAGF,QAAQ,CAACG,IAAI;MACtCV,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEQ,YAAY,CAAC;MACnDX,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEF,YAAY,CAAC;MAC3C,MAAMP,WAAW,GAAGd,SAAS,CAACqB,YAAY,CAAC;MAC3Cb,OAAO,CAACM,WAAW,CAAC;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMS,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAER,KAAK,EAAEC,QAAQ,KAAK;IACpD,IAAI;MACF,MAAMnB,KAAK,CAACqB,IAAI,CAAC,WAAW,EAAE;QAAEK,QAAQ;QAAER,KAAK;QAAEC;MAAS,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBhB,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;IAChCnB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAES,KAAK;MAAEQ,QAAQ;MAAEE;IAAO,CAAE;IAAArB,QAAA,EAC5DA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CAjDIF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAmDlB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}