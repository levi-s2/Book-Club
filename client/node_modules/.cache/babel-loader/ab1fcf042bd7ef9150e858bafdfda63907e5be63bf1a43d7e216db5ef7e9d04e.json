{"ast":null,"code":"import React,{useState,useContext}from'react';import{Formik,Field,ErrorMessage,Form}from'formik';import*as Yup from'yup';import NavBar from'./NavBar';import{AuthContext}from'./context/AuthContext';import{ThemeContext}from'./context/ThemeContext';import{GenresContext}from'./context/GenresContext';import{BookClubsContext}from'./context/BookClubsContext';import{Form as AntForm,Input,Checkbox,Button,Alert}from'antd';import'./css/CreateClub.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateClub=()=>{const{user,updateUserCreatedClubs}=useContext(AuthContext);const{theme}=useContext(ThemeContext);const{genres}=useContext(GenresContext);const{createClub}=useContext(BookClubsContext);const[message,setMessage]=useState('');const[error,setError]=useState('');const handleSubmit=async(values,_ref)=>{let{setSubmitting}=_ref;setMessage('');setError('');try{const response=await createClub(values);setMessage(response.message);updateUserCreatedClubs([...user.created_clubs,response.club]);window.location.href='/book-clubs';}catch(error){setError('Error creating book club.');}finally{setSubmitting(false);}};const validationSchema=Yup.object().shape({name:Yup.string().required('Club name is required'),description:Yup.string().required('Description is required'),genre_ids:Yup.array().of(Yup.number()).min(1,'At least one genre must be selected').max(3,'You can select up to 3 genres')});if(user&&user.created_clubs&&user.created_clubs.length>0){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"div\",{className:`create-club-container ${theme}`,children:/*#__PURE__*/_jsx(\"h2\",{children:\"You have already created a book club\"})})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:`create-club-container ${theme}`,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create a New Book Club\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{name:'',description:'',genre_ids:[]},validationSchema:validationSchema,onSubmit:handleSubmit,children:_ref2=>{let{isSubmitting,values,setFieldValue}=_ref2;return/*#__PURE__*/_jsxs(Form,{className:\"create-club-form\",children:[/*#__PURE__*/_jsxs(AntForm.Item,{label:\"Club Name\",name:\"name\",children:[/*#__PURE__*/_jsx(Field,{as:Input,id:\"name\",name:\"name\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"name\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsxs(AntForm.Item,{label:\"Description\",name:\"description\",children:[/*#__PURE__*/_jsx(Field,{as:Input.TextArea,id:\"description\",name:\"description\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"description\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsxs(AntForm.Item,{label:\"Genres (select up to 3)\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"genre-list\",children:genres.map(genre=>/*#__PURE__*/_jsx(\"div\",{className:\"genre-item\",children:/*#__PURE__*/_jsx(Checkbox,{id:`genre-${genre.id}`,checked:values.genre_ids.includes(genre.id),onChange:()=>{const newGenreIds=values.genre_ids.includes(genre.id)?values.genre_ids.filter(id=>id!==genre.id):[...values.genre_ids,genre.id].slice(0,3);setFieldValue('genre_ids',newGenreIds);},children:genre.name})},genre.id))}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"genre_ids\",component:\"div\",className:\"error-message\"})]}),/*#__PURE__*/_jsx(AntForm.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",disabled:isSubmitting,children:\"Create Club\"})}),message&&/*#__PURE__*/_jsx(Alert,{message:message,type:\"success\"}),error&&/*#__PURE__*/_jsx(Alert,{message:error,type:\"error\"})]});}})]})]});};export default CreateClub;","map":{"version":3,"names":["React","useState","useContext","Formik","Field","ErrorMessage","Form","Yup","NavBar","AuthContext","ThemeContext","GenresContext","BookClubsContext","AntForm","Input","Checkbox","Button","Alert","jsx","_jsx","jsxs","_jsxs","CreateClub","user","updateUserCreatedClubs","theme","genres","createClub","message","setMessage","error","setError","handleSubmit","values","_ref","setSubmitting","response","created_clubs","club","window","location","href","validationSchema","object","shape","name","string","required","description","genre_ids","array","of","number","min","max","length","children","className","initialValues","onSubmit","_ref2","isSubmitting","setFieldValue","Item","label","as","id","component","TextArea","map","genre","checked","includes","onChange","newGenreIds","filter","slice","type","htmlType","disabled"],"sources":["/home/levi/Development/book-club/client/src/components/CreateClub.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport * as Yup from 'yup';\nimport NavBar from './NavBar';\nimport { AuthContext } from './context/AuthContext';\nimport { ThemeContext } from './context/ThemeContext';\nimport { GenresContext } from './context/GenresContext';\nimport { BookClubsContext } from './context/BookClubsContext';\nimport { Form as AntForm, Input, Checkbox, Button, Alert } from 'antd';\nimport './css/CreateClub.css';\n\nconst CreateClub = () => {\n  const { user, updateUserCreatedClubs } = useContext(AuthContext);\n  const { theme } = useContext(ThemeContext);\n  const { genres } = useContext(GenresContext);\n  const { createClub } = useContext(BookClubsContext); \n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    setMessage('');\n    setError('');\n\n    try {\n      const response = await createClub(values);\n      setMessage(response.message);\n      updateUserCreatedClubs([...user.created_clubs, response.club]);\n      window.location.href = '/book-clubs';\n    } catch (error) {\n      setError('Error creating book club.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Club name is required'),\n    description: Yup.string().required('Description is required'),\n    genre_ids: Yup.array().of(Yup.number()).min(1, 'At least one genre must be selected').max(3, 'You can select up to 3 genres'),\n  });\n\n  if (user && user.created_clubs && user.created_clubs.length > 0) {\n    return (\n      <div>\n        <NavBar />\n        <div className={`create-club-container ${theme}`}>\n          <h2>You have already created a book club</h2>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <NavBar />\n      <div className={`create-club-container ${theme}`}>\n        <h2>Create a New Book Club</h2>\n        <Formik\n          initialValues={{ name: '', description: '', genre_ids: [] }}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting, values, setFieldValue }) => (\n            <Form className=\"create-club-form\">\n              <AntForm.Item label=\"Club Name\" name=\"name\">\n                <Field as={Input} id=\"name\" name=\"name\" />\n                <ErrorMessage name=\"name\" component=\"div\" className=\"error-message\" />\n              </AntForm.Item>\n              <AntForm.Item label=\"Description\" name=\"description\">\n                <Field as={Input.TextArea} id=\"description\" name=\"description\" />\n                <ErrorMessage name=\"description\" component=\"div\" className=\"error-message\" />\n              </AntForm.Item>\n              <AntForm.Item label=\"Genres (select up to 3)\">\n                <div className=\"genre-list\">\n                  {genres.map((genre) => (\n                    <div key={genre.id} className=\"genre-item\">\n                      <Checkbox\n                        id={`genre-${genre.id}`}\n                        checked={values.genre_ids.includes(genre.id)}\n                        onChange={() => {\n                          const newGenreIds = values.genre_ids.includes(genre.id)\n                            ? values.genre_ids.filter((id) => id !== genre.id)\n                            : [...values.genre_ids, genre.id].slice(0, 3);\n                          setFieldValue('genre_ids', newGenreIds);\n                        }}\n                      >\n                        {genre.name}\n                      </Checkbox>\n                    </div>\n                  ))}\n                </div>\n                <ErrorMessage name=\"genre_ids\" component=\"div\" className=\"error-message\" />\n              </AntForm.Item>\n              <AntForm.Item>\n                <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n                  Create Club\n                </Button>\n              </AntForm.Item>\n              {message && <Alert message={message} type=\"success\" />}\n              {error && <Alert message={error} type=\"error\" />}\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateClub;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}