{"ast":null,"code":"var _jsxFileName = \"/home/levi/Development/code/phase-5/book-club/client/src/components/context/GenresContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from '../axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenresContext = /*#__PURE__*/createContext();\nconst GenresProvider = ({\n  children\n}) => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get('/genres');\n        setGenres(response.data);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GenresContext.Provider, {\n    value: {\n      genres\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(GenresProvider, \"OACoFRc7CCgkBjNz6yRao2W4P/w=\");\n_c = GenresProvider;\nexport { GenresContext, GenresProvider };\nvar _c;\n$RefreshReg$(_c, \"GenresProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","GenresContext","GenresProvider","children","_s","genres","setGenres","fetchGenres","response","get","data","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/levi/Development/code/phase-5/book-club/client/src/components/context/GenresContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from '../axiosConfig';\n\nconst GenresContext = createContext();\n\nconst GenresProvider = ({ children }) => {\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get('/genres');\n        setGenres(response.data);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n\n    fetchGenres();\n  }, []);\n\n  return (\n    <GenresContext.Provider value={{ genres }}>\n      {children}\n    </GenresContext.Provider>\n  );\n};\n\nexport { GenresContext, GenresProvider };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;AAErC,MAAMO,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,SAAS,CAAC;QAC3CH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACC,aAAa,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET;IAAO,CAAE;IAAAF,QAAA,EACvCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACd,EAAA,CArBIF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAuBpB,SAASD,aAAa,EAAEC,cAAc;AAAG,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}